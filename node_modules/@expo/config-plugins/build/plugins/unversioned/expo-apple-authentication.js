"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.withAppleAuthentication = void 0;
const ios_plugins_1 = require("../ios-plugins");
const withRunOnce_1 = require("../withRunOnce");
const withStaticPlugin_1 = require("../withStaticPlugin");
const packageName = 'expo-apple-authentication';
const withAppleSignInEntitlement = ios_plugins_1.createEntitlementsPlugin(setAppleSignInEntitlement, 'withAppleSignInEntitlement');
function setAppleSignInEntitlement(config, { 'com.apple.developer.applesignin': _, ...entitlementsPlist }) {
    var _a;
    if ((_a = config.ios) === null || _a === void 0 ? void 0 : _a.usesAppleSignIn) {
        return {
            ...entitlementsPlist,
            'com.apple.developer.applesignin': ['Default'],
        };
    }
    return entitlementsPlist;
}
const withAppleAuthentication = config => {
    return withStaticPlugin_1.withStaticPlugin(config, {
        _isLegacyPlugin: true,
        plugin: packageName,
        // If the static plugin isn't found, use the unversioned one.
        fallback: withUnversionedAppleAuthentication,
    });
};
exports.withAppleAuthentication = withAppleAuthentication;
const withUnversionedAppleAuthentication = withRunOnce_1.createRunOncePlugin(config => {
    config = withAppleSignInEntitlement(config);
    return config;
}, packageName);
exports.default = exports.withAppleAuthentication;
//# sourceMappingURL=expo-apple-authentication.js.map