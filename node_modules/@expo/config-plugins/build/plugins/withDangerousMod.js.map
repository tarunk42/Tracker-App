{"version":3,"file":"withDangerousMod.js","sourceRoot":"","sources":["../../src/plugins/withDangerousMod.ts"],"names":[],"mappings":";;;AAGA,mDAAmD;AACnD,uCAAiD;AAEjD;;;;;;;GAOG;AACI,MAAM,gBAAgB,GAA8C,CACzE,MAAM,EACN,CAAC,QAAQ,EAAE,MAAM,CAAC,EAClB,EAAE;IACF,OAAO,iBAAO,CAAC,MAAM,EAAE;QACrB,QAAQ;QACR,GAAG,EAAE,WAAW;QAChB,MAAM;KACP,CAAC,CAAC;AACL,CAAC,CAAC;AATW,QAAA,gBAAgB,oBAS3B;AAEK,MAAM,oBAAoB,GAA8B,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;IAClF,+CAA+C;IAC/C,OAAO,qBAAW,CAAa,MAAM,EAAE;QACrC,QAAQ;QACR,GAAG,EAAE,WAAW;QAChB,YAAY,EAAE,IAAI;QAClB,KAAK,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE,GAAG,UAAU,EAAE,EAAE,GAAG,MAAM,EAAE;YAChE,MAAM,OAAO,GAAG,MAAM,OAAQ,CAAC;gBAC7B,GAAG,MAAM;gBACT,UAAU;aACX,CAAC,CAAC;YACH,gCAAgB,CAAC,OAAO,EAAE,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;YACnE,OAAO,OAAO,CAAC;QACjB,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAfW,QAAA,oBAAoB,wBAe/B","sourcesContent":["import { JSONObject } from '@expo/json-file';\n\nimport { ConfigPlugin, Mod, ModPlatform } from '../Plugin.types';\nimport { assertModResults } from './createBaseMod';\nimport { withBaseMod, withMod } from './withMod';\n\n/**\n * Mods that don't modify any data, all unresolved functionality is performed inside a dangerous mod.\n * All dangerous mods run first before other mods.\n *\n * @param config\n * @param platform\n * @param action\n */\nexport const withDangerousMod: ConfigPlugin<[ModPlatform, Mod<unknown>]> = (\n  config,\n  [platform, action]\n) => {\n  return withMod(config, {\n    platform,\n    mod: 'dangerous',\n    action,\n  });\n};\n\nexport const withDangerousBaseMod: ConfigPlugin<ModPlatform> = (config, platform) => {\n  // Used for scheduling when dangerous mods run.\n  return withBaseMod<JSONObject>(config, {\n    platform,\n    mod: 'dangerous',\n    skipEmptyMod: true,\n    async action({ modRequest: { nextMod, ...modRequest }, ...config }) {\n      const results = await nextMod!({\n        ...config,\n        modRequest,\n      });\n      assertModResults(results, modRequest.platform, modRequest.modName);\n      return results;\n    },\n  });\n};\n"]}